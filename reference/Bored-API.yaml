openapi: 3.1.0
x-stoplight:
  id: mqjpbn4jrbr55
info:
  title: Bored API
  version: '1.0'
  contact:
    name: Support
    url: 'https://www.boredapi.com/api/'
  license:
    url: 'https://github.com/drewthoennes/Bored-API/blob/master/license'
    name: Bored API
  summary: Get a truckload of activities at your fingertip to rid you of the boredom lurking in the shadows.
  description: 'This API was solely designed to eradicate the boredom currently plaguing the world. With just a few keywords you can get a list of activities with price range that you can afford to add some spice to your life. So if you have wondering what you could possibly do for the summer, this is the right place to get your summer preparations started.'
servers:
  - description: Bored API
    url: 'https://www.boredapi.com/api/'
paths:
  /activity/:
    parameters: []
    get:
      summary: Gets a random activity
      responses:
        '200':
          description: You can try this!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/activity'
              examples:
                Get User Alice Smith:
                  value:
                    id: 142
                    firstName: Alice
                    lastName: Smith
                    email: alice.smith@gmail.com
                    dateOfBirth: '1997-10-31'
                    emailVerified: true
                    signUpDate: '2019-08-24'
      operationId: get-users-userId
      description: This retrieves a random activity to engage in.
      x-stoplight:
        id: jutso8twi81dk
      tags:
        - User Enpoints
    patch:
      summary: Update User Information
      operationId: patch-users-userId
      responses:
        '200':
          description: User Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Updated User Rebecca Baker:
                  value:
                    id: 13
                    firstName: Rebecca
                    lastName: Baker
                    email: rebecca@gmail.com
                    dateOfBirth: '1985-10-02'
                    emailVerified: false
                    createDate: '2019-08-24'
        '404':
          description: User Not Found
        '409':
          description: Email Already Taken
      description: Update the information of an existing user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                  description: 'If a new email is given, the user''s email verified property will be set to false.'
                dateOfBirth:
                  type: string
            examples:
              Update First Name:
                value:
                  firstName: Rebecca
              Update Email:
                value:
                  email: rebecca@gmail.com
              Update Last Name & Date of Birth:
                value:
                  lastName: Baker
                  dateOfBirth: '1985-10-02'
        description: Patch user properties to update.
      x-stoplight:
        id: fywpsobievu4h
  /user:
    post:
      summary: Create New User
      operationId: post-user
      responses:
        '200':
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                New User Bob Fellow:
                  value:
                    id: 12
                    firstName: Bob
                    lastName: Fellow
                    email: bob.fellow@gmail.com
                    dateOfBirth: '1996-08-24'
                    emailVerified: false
                    createDate: '2020-11-18'
        '400':
          description: Missing Required Information
        '409':
          description: Email Already Taken
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                dateOfBirth:
                  type: string
                  format: date
              required:
                - firstName
                - lastName
                - email
                - dateOfBirth
            examples:
              Create User Bob Fellow:
                value:
                  firstName: Bob
                  lastName: Fellow
                  email: bob.fellow@gmail.com
                  dateOfBirth: '1996-08-24'
        description: Post the necessary fields for the API to create a new user.
      description: Create a new user.
      x-stoplight:
        id: swmedtaexmzb6
components:
  schemas:
    activity:
      type: object
      x-examples:
        Example 1:
          activity: Learn Express.js
          accessibility: 0.25
          type: education
          participants: 1
          price: 0.1
          link: 'https://expressjs.com/'
          key: '3943506'
      properties:
        activity:
          type: string
          description: |
            A random activity to perform
        accessibility:
          type: number
          description: How possible it is to engage in such activity
        type:
          type: string
          description: |-
            Type of the activity

            ["education", "recreational", "social", "diy", "charity", "cooking", "relaxation", "music", "busywork"]
        participants:
          type: integer
          description: Number of participant needed for each activity
        price:
          type: number
          description: The price range. This ranges from 0.0-1.0
        link:
          type: string
          description: Link to the activity
        key:
          type: string
          description: A defined key designated to each activity
tags:
  - name: 'yes'
